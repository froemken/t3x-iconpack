/*
 * This file is part of the "iconpack" Extension for TYPO3 CMS.
 *
 * Conceived and written by Stephan Kellermayr
 *
 * For the full copyright and license information, please read the
 * LICENSE.txt file that was distributed with this source code.
 */
import{Plugin as e,Command as t}from'@ckeditor/ckeditor5-core';import{Widget as i,toWidget as o}from'@ckeditor/ckeditor5-widget';import{ButtonView as n}from'@ckeditor/ckeditor5-ui';import{DomEventObserver as c}from'@ckeditor/ckeditor5-engine';import r from'@quellenform/iconpack-modal.js';const s='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><g stroke="#000" stroke-linecap="round" stroke-linejoin="bevel" stroke-width=".295"><path d="m0.2628 1.9151 6.6836 3.9405 12.791-2.9519-8.6056-2.7421z" fill="#a5a6a5"/><path d="m0.2628 1.9151 1.2416 11.367 5.8931 6.5566-0.45127-13.983z" fill="#8c8d8c"/><path d="m19.737 2.9037-1.4892 12.311-10.851 4.6234-0.45127-13.983z" fill="#bec0be" style="paint-order:normal"/></g></svg>';class a extends c{get domEventType(){return'dblclick'}onDomEvent(e){this.fire('dblclick',e)}}export class Iconpack extends e{static get requires(){return[IconpackCommand,IconpackEditing,IconpackUI]}}Iconpack.pluginName='Iconpack';export class IconpackEditing extends e{constructor(){super(...arguments),this.attributes=null}static get requires(){return[i]}init(){this.attributes=['data-iconfig','name','id','class','style','alt','title'],this._defineSchema(),this._defineWebfontConverters(),this._defineImageConverters(),this.editor.commands.add('iconpack',new IconpackCommand(this.editor))}_defineSchema(){const e=this.editor.model.schema;e.register('iconpackWebfont',{allowAttributes:Object.values(this.attributes),allowWhere:'$text',isInline:!0,isObject:!0,isLimit:!0}),e.register('iconpackImage',{allowAttributes:Object.values(this.attributes).concat('src'),allowWhere:'$text',isInline:!0,isObject:!0,isLimit:!0}),this.editor.editing.view.domConverter.inlineObjectElements.push('iconpackWebfont'),this.editor.editing.view.domConverter.inlineObjectElements.push('iconpackImage')}_defineWebfontConverters(){const e=this.editor.conversion;e.for('upcast').elementToElement({view:{name:'span',attributes:['data-iconfig']},model:(e,{writer:t})=>t.createElement('iconpackWebfont',e.getAttributes()),converterPriority:'highest'}),e.for('dataDowncast').elementToElement({model:'iconpackWebfont',view:(e,{writer:t})=>t.createEmptyElement('span',e.getAttributes())}),e.for('editingDowncast').elementToElement({model:'iconpackWebfont',view:(e,{writer:t})=>{const i=t.createContainerElement('span',e.getAttributes());return i._addClass('ck-widget-iconpack'),o(i,t,{label:'Iconpack widget'})}})}_defineImageConverters(){const e=this.editor.conversion;e.for('upcast').elementToElement({view:{name:'img',attributes:['data-iconfig']},model:(e,{writer:t})=>t.createElement('iconpackImage',e.getAttributes()),converterPriority:'highest'}),e.for('dataDowncast').elementToElement({model:'iconpackImage',view:(e,{writer:t})=>(e._removeAttribute('htmlImgAttributes'),e._removeAttribute('loading'),t.createEmptyElement('img',e.getAttributes()))}),e.for('editingDowncast').elementToElement({model:'iconpackImage',view:(e,{writer:t})=>{const i=t.createContainerElement('img',e.getAttributes());return i._addClass('ck-widget-iconpack'),o(i,t,{label:'Iconpack widget'})}})}}export class IconpackCommand extends t{execute(){const e=this.editor.model.document.selection;this.editor.model.change(t=>{const i=e.getSelectedElement();let o=null;i&&(o=i.getAttribute('data-iconfig'));const n={fieldType:'rte',iconfigString:o};r.openIconpackModal(TYPO3.lang['js.label.iconRte'],n,this._addIconToRte.bind(this),this._removeIconFromRte.bind(this))})}refresh(){const e=this.editor.model,t=e.document.selection,i=e.schema.findAllowedParent(t.getFirstPosition(),'iconpackWebfont');this.isEnabled=null!==i}_addIconToRte(e,t){if(t){const e=this.editor.data.processor.toView(t),i=this.editor.data.toModel(e);this.editor.model.insertContent(i)}}_removeIconFromRte(){const e=this.editor.model.document.selection.getFirstRange();this.editor.model.change(t=>{t.remove(e)})}}export class IconpackUI extends e{init(){const e=this.editor,t=e.t;e.ui.componentFactory.add('iconpack',i=>{const o=e.commands.get('iconpack'),c=new n(i);return c.set({withText:!0,tooltip:t('Insert Icon'),icon:s,isToggleable:!0}),c.bind('isOn','isEnabled').to(o,'value','isEnabled'),this.listenTo(c,'execute',()=>{e.execute('iconpack')}),c});const i=e.editing.view,o=i.document;i.addObserver(a),e.listenTo(o,'dblclick',(t,i)=>{const o=e.editing.mapper.toModelElement(i.target);!o||void 0===o.name||'iconpackWebfont'!==o.name&&'iconpackImage'!==o.name||e.execute('iconpack')})}}export default Iconpack;
